% 
% CFE SIL Interface code generation test cases for:
% Model: mTestReusable 
%

classdef Test_mTestReusable < cfetargettester.CfeTargetTester
    
    properties
        TestModel = 'mTestReusable'
        TestInterface = 'eci_interface.h'
        TestData  = 'test_data.mat'
    end
    
    methods(TestClassSetup)
        function loadModel(testcase)
                load_system(testcase.TestModel);
                testcase.configModelForTesting(testcase.TestModel);                
                testcase.addTeardown(@() close_system(testcase.TestModel, 0));
        end
    end
    
    methods(Test)
       
        % Check basic contents of SIL interface header 
        % - this will generate code
        %
        % This test model will have static data defined in the interface
        % (see patterns below).
        function testInterfaceHeader(testcase)  
            import matlab.unittest.constraints.IssuesNoWarnings
            
            mdl = testcase.TestModel;      
            testcase.verifyThat(@() testcase.generateCode(), IssuesNoWarnings);                
            
            % Check typical patterns
            patterns(1).FileName = [testcase.TestInterface];          
            patterns(1).ContainsOrderedPatterns = { ...
                '#define\s*ECI_APP_REVISION_NUMBER\s*', ...
                '#define\s*MODEL_NAME_LEN\s*', ...                               
                ['#define\s*ECI_FLAG_MID\s*',upper(mdl),'_FDC_MID'], ...
                ['#define\s*ECI_CMD_MID\s*',upper(mdl),'_CMD_MID'], ...
                ['#define\s*ECI_PERF_ID\s*',upper(mdl),'_PERF_ID'], ...
                ['#define\s*ECI_TICK_MID\s*',upper(mdl),'_TICK_MID'], ...
                ['#define\s*ECI_HK_MID\s*',upper(mdl),'_HK_MID'], ... 
                ['#define\s*ECI_APP_MAIN\s*',lower(mdl),'_AppMain'], ...
                ['#define\s*ECI_APP_NAME_UPPER\s*\x22',upper(mdl),'\x22'], ...
                ['#define\s*ECI_APP_NAME_LOWER\s*\x22',lower(mdl),'\x22'], ...                
                ['#define\s*ECI_CMD_PIPE_NAME\s*\x22',upper(mdl),'_CMD_PIPE\x22'], ...    
                ['#define\s*ECI_DATA_PIPE_NAME\s*\x22',upper(mdl),'_DATA_PIPE\x22']};                               
%                 ['#define\s*ECI_TICK_HZ\s*',upper(mdl),'_HZ'], ...    
% removed from ECI temporarily

            patterns(2).FileName = [testcase.TestInterface];          
            patterns(2).ContainsOrderedStrings = { ...          
                'static RT_MODEL_mTestReusable_T mTestReusable_M;'  ,...
                'static RT_MODEL_mTestReusable_T *const mTestReusable_MPtr = &mTestReusable_M;'  ,...
                'static DW_mTestReusable_T mTestReusable_DW;'  ,...
                'static real_T mTestReusable_U_In1;'  ,...
                'static real_T mTestReusable_Y_Out1;'  } ;            
            
            % init, step and terminate pattern 
            patterns(3).FileName = [testcase.TestInterface];
            patterns(3).ContainsOrderedStrings = { ...           
                '#define ECI_INIT_FCN \'  , ...
                'mTestReusable_M->dwork = &mTestReusable_DW; \'  , ...
                'mTestReusable_initialize(mTestReusable_M, &mTestReusable_U_In1, &mTestReusable_Y_Out1);'  , ...
                '#define ECI_STEP_FCN \'  , ...
                'mTestReusable_step(mTestReusable_M, mTestReusable_U_In1, &mTestReusable_Y_Out1);'  , ...
                '#define ECI_TERM_FCN                 mTestReusable_terminate(mTestReusable_M);'  , ...
                '#endif' }  ;                  
            
            testcase.checkCodeContents(patterns);
        end        

    end
end
